{"version":3,"sources":["components/Searchbar/Searchbar.js","components/ImageGalleryItem/ImageGalleryItem.js","components/ImageGallery/ImageGallery.js","service/Api.js","components/Button/Button.js","components/Modal/Modal.js","App.js","index.js"],"names":["Searchbar","onSubmit","useState","searchQuery","setSearchQuery","className","e","preventDefault","trim","alert","type","autoComplete","autoFocus","value","onChange","target","toLowerCase","placeholder","ImageGalleryItem","src","largeImg","alt","height","width","ImageGallery","pictures","onImgClick","onClick","map","id","webformatURL","largeImageURL","axios","defaults","baseURL","params","key","image_type","orientation","per_page","Api","fetchImages","page","a","get","q","data","hits","console","log","error","Button","onBtnClick","text","modalRoot","document","querySelector","Modal","onKeydownClick","onCloseModal","props","code","onBackdropClick","currentTarget","window","addEventListener","this","removeEventListener","createPortal","children","Component","App","setPictures","currentPictures","setCurrentPictures","setPage","setError","loader","setLoader","openModal","setOpenModal","useEffect","then","length","state","catch","finally","scrollTo","top","documentElement","scrollHeight","behavior","toggleModal","scrollPage","setTimeout","scrollBy","clientHeight","color","query","dataset","img","prevPage","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.7e4bb738.chunk.js","sourcesContent":["import { useState } from 'react';\nimport PropTypes from 'prop-types';\n\nexport default function Searchbar({ onSubmit }) {\n  const [searchQuery, setSearchQuery] = useState('');\n\n  \n  const onSearchInputChange = e => {\n    setSearchQuery(e.target.value.toLowerCase());\n  };\n\n  const onSearchFromSubmit = e => {\n    e.preventDefault();\n\n    if (searchQuery.trim() === '') {\n      alert('Please, enter your query !');\n      return;\n    }\n    onSubmit(searchQuery);\n    setSearchQuery('');\n  };\n  return (\n      <div>\n        <header className=\"Searchbar\">\n          <form className=\"SearchForm\" onSubmit={onSearchFromSubmit}>\n            <button type=\"submit\" className=\"SearchForm-button\">\n              <span className=\"SearchForm-button-label\">Search</span>\n            </button>\n\n            <input\n              className=\"SearchForm-input\"\n              type=\"text\"\n              autoComplete=\"off\"\n              autoFocus\n              value={searchQuery}\n              onChange={onSearchInputChange}\n              placeholder=\"Search images...\"\n            />\n          </form>\n        </header>\n      </div>\n    );\n  }\n\n  Searchbar.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n};\n","import React from 'react';\n\nconst ImageGalleryItem = ({ src, largeImg }) => (\n  <li className=\"ImageGalleryItem\">\n    <img\n      src={src}\n      alt=\"\"\n      className=\"ImageGalleryItem-image\"\n      data-img={largeImg}\n      height=\"240\"\n      width=\"320\"\n    />\n  </li>\n);\n\nexport default ImageGalleryItem;\n","import React from 'react';\nimport ImageGalleryItem from '../ImageGalleryItem/ImageGalleryItem';\nimport PropTypes from 'prop-types';\n\nconst ImageGallery = ({ pictures, onImgClick }) => (\n  <ul className=\"ImageGallery\" onClick={onImgClick}>\n    {pictures.map(({ id, webformatURL, largeImageURL }) => (\n      <ImageGalleryItem key={id} src={webformatURL} largeImg={largeImageURL} />\n    ))}\n  </ul>\n);\n\nImageGallery.propTypes = {\n  pictures: PropTypes.arrayOf(PropTypes.object),\n  onImgClick: PropTypes.func.isRequired,\n};\n\nexport default ImageGallery;\n","import axios from 'axios';\n\nconst KEY = '18977229-7092af5d4460397c12f37767a';\nconst BASE_URL = `https://pixabay.com/api/`;\n\naxios.defaults.baseURL = BASE_URL;\naxios.defaults.params = {\n  key: KEY,\n  image_type: 'photo',\n  orientation: 'horizontal',\n  per_page: 12,\n};\n\nconst fetchImages = async (searchQuery, page) => {\n  try {\n    const { data } = await axios.get('', {\n      params: { q: searchQuery, page },\n    });\n    return data.hits;\n  } catch (error) {\n    console.log('error', { error });\n    return [];\n  }\n};\nconst Api = {\n  fetchImages,\n};\n\nexport default Api;","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Button = ({ onBtnClick, text }) => (\n  <button className=\"Button\" type=\"button\" onClick={onBtnClick}>\n    {text}\n  </button>\n);\n\nButton.propTypes = {\n  onBtnClick: PropTypes.func.isRequired,\n  text: PropTypes.string.isRequired,\n};\n\nexport default Button;\n","import React, { Component } from 'react';\nimport { createPortal } from 'react-dom';\nimport PropTypes from 'prop-types';\n\nconst modalRoot = document.querySelector('#modal-root');\n\nexport default class Modal extends Component {\n  static propTypes = {\n    onCloseModal: PropTypes.func,\n  };\n\n  componentDidMount() {\n    window.addEventListener('keydown', this.onKeydownClick);\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('keydown', this.onKeydownClick);\n  }\n\n  onKeydownClick = e => {\n    const { onCloseModal } = this.props;\n    if (e.code === 'Escape') {\n      onCloseModal();\n    }\n  };\n  onBackdropClick = e => {\n    const { onCloseModal } = this.props;\n    if (e.currentTarget === e.target) {\n      onCloseModal();\n    }\n  };\n\n  render() {\n    return createPortal(\n      <div className=\"Overlay\" onClick={this.onBackdropClick}>\n        <div className=\"Modal\">{this.props.children}</div>\n      </div>,\n      modalRoot,\n    );\n  }\n}\n","import Searchbar from './components/Searchbar/Searchbar';\n\nimport { useState, useEffect } from 'react';\nimport ImageGallery from './components/ImageGallery/ImageGallery';\nimport Api from './service/Api';\nimport Button from './components/Button/Button';\nimport Modal from './components/Modal/Modal';\nimport Loader from 'react-loader-spinner';\n\nimport 'react-loader-spinner/dist/loader/css/react-spinner-loader.css';\n\nexport default function App() {\n  const [searchQuery, setSearchQuery] = useState('');\n  const [pictures, setPictures] = useState([]);\n  const [currentPictures, setCurrentPictures] = useState('');\n  const [page, setPage] = useState(1);\n  const [error, setError] = useState(null);\n  const [loader, setLoader] = useState(false);\n  const [openModal, setOpenModal] = useState(false);\n\n useEffect(() => {\n    if (!searchQuery) return;\n\n    setLoader(false)\n\n    Api\n      .fetchImages(searchQuery, page, error)\n      .then(pictures => {\n        if (pictures.length === 0) {\n          alert(\"Pictures not found!\");\n          \n          return;\n        }\n        setPictures(state => {\n          return [...state, ...pictures];\n        });\n        \n      })\n      .catch(error => {\n        setError(error);\n        \n      })\n      \n      .finally(data => {\n        window.scrollTo({\n          top: document.documentElement.scrollHeight - 995,\n          behavior: 'smooth',\n        });\n      });\n   \n  }, [searchQuery, page, error]);\n  \n  const onFormSubmit = query => {\n    if (query === searchQuery) {\n      return;\n    }\n      \n\n    setSearchQuery(query);\n    setPictures([]);\n    setPage(1);\n    setError(null);\n    setLoader(true);\n  };\n\n  const onLoadMore = () => {\n    setLoader(true);\n    setPage(prevPage => prevPage + 1);\n    scrollPage();\n  };\n\n  const onImgClick = e => {\n    setCurrentPictures(e.target.dataset.img);\n    toggleModal();\n  };\n\n  const toggleModal = () => {\n    setOpenModal(!openModal);\n  };\n\n   const scrollPage = () => {\n    setTimeout(() => {\n      window.scrollBy({\n        top: document.documentElement.clientHeight - 160,\n        behavior: 'smooth',\n      });\n    }, 800);\n  };\n\n  return (\n      <div className=\"App\">\n        {loader && (\n          <Modal>\n            <Loader type=\"Rings\" color=\"#00BFFF\" height={700} width={700} />\n          </Modal>\n        )}\n        <Searchbar value={searchQuery} onSubmit={onFormSubmit} />\n        <ImageGallery pictures={pictures} onImgClick={onImgClick} />\n        {pictures.length > 0 && (\n          <Button\n            onBtnClick={onLoadMore}\n            text={loader ? 'Loading' : 'Load More'}\n          />\n        )}\n\n        {openModal && (\n          <Modal onCloseModal={toggleModal}>\n            <img src={currentPictures} alt=\"Dont Worry Be Happy\" />\n          </Modal>\n        )}\n      </div>\n    );\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}